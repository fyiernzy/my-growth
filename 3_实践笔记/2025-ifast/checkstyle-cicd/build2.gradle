buildscript {
    repositories {
        maven { url = "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }

    dependencies {
        classpath "io.swagger.codegen.v3:swagger-codegen-maven-plugin:${swaggerCodegenVersion}"
    }
}

subprojects {

    dependencies {
        // Spring Boot Dependencies
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // Database & ORM
        implementation "org.postgresql:postgresql:${postgresqlVersion}"
        implementation 'com.querydsl:querydsl-jpa::jakarta'
        implementation 'jakarta.persistence:jakarta.persistence-api'
        implementation 'org.hibernate.orm:hibernate-core'

        annotationProcessor(
                'com.querydsl:querydsl-apt::jakarta',
                'jakarta.persistence:jakarta.persistence-api'
        )

        // MapStruct (for DTO Mapping)
        implementation "org.mapstruct:mapstruct:${mapStructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

        // AWS SDK for S3
        implementation "software.amazon.awssdk:s3:${awsSdkVersion}"

        //Cache
        implementation("org.ehcache:ehcache:${ehCacheVersion}") {
            //By default, Ehcache uses javax, we need to enforce it to use jakarta
            //https://stackoverflow.com/questions/76750906/spring-boot-3-ehcache-config-setup-issue
            //https://github.com/ehcache/ehcache3/releases
          capabilities {
            requireCapability('org.ehcache:ehcache-jakarta')
          }
        }
        implementation 'org.springframework.boot:spring-boot-starter-cache'

        // Generate Excel
        implementation "org.apache.poi:poi-ooxml:${apachePoiXmlVersion}"
    }

}
