.skip_checkstyle: &skip_checkstyle
  - if: '$CI_COMMIT_BRANCH == "feature/checkstyle"'
    when: never
  - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "feature/mr-test-checkstyle" &&
         $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "feature/checkstyle"'
    when: never
  - when: always

include:
  - local: checkstyle.gitlab-ci.yml
    rules:
      - if: '$CI_COMMIT_BRANCH == "feature/checkstyle"'
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "feature/mr-test-checkstyle" &&
               $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "feature/checkstyle"'

  - local: .gitlab/ci_templates/.job.gitlab-ci.yml
    rules:
      - if: '$CI_COMMIT_BRANCH == "feature/checkstyle"'
        when: never
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "feature/mr-test-checkstyle" &&
             $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "feature/checkstyle"'
        when: never
      - when: always

  - local: .gitlab/backend/.my-batch-ws.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/backend/.my-modular-ws.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/frontend/.my-internal-api.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/frontend/.my-public-api.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/frontend/.my-web-backoffice.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/frontend/.my-web-ifast-pay.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/frontend/.my-web-backoffice.gitlab-ci.yml
    rules: *skip_checkstyle

  - local: .gitlab/frontend/.my-web-ifast-pay.gitlab-ci.yml
    rules: *skip_checkstyle

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "feature/checkstyle" && $CI_PIPELINE_SOURCE == "push"'
      when: always

    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" &&
               $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME  == "feature/checkstyle" &&
               $CI_MERGE_REQUEST_TARGET_BRANCH_NAME  == "feature/mr-test-checkstyle"'
      when: always

    # Rule 1: Preview Environment (Branch Push)
    - if: '$CI_COMMIT_BRANCH == "preview" && $CI_PIPELINE_SOURCE == "push"'
      variables:
        ENV: "dev"
        MANIFEST_BRANCH: "feature/dev"
      when: always

    # Rule 2: UAT Environment
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"'
      variables:
        ENV: "uat"
        MANIFEST_BRANCH: "feature/dev"
      when: always

    # Rule 3: Hotfix Environment
    - if: '$CI_COMMIT_BRANCH =~ /^hotfix\// && $CI_PIPELINE_SOURCE == "push"'
      variables:
        ENV: "hotfix"
        MANIFEST_BRANCH: $CI_COMMIT_BRANCH
      when: always

    # Rule 4: Prod Environment
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      variables:
        ENV: "prod"
        MANIFEST_BRANCH: "master"
      when: always

    # Rule 5: Block all other pipelines
    - when: never